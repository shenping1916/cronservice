// Code generated by ICEBERG protoc-gen-go. DO NOT EDIT EXCEPET SERVER VERSION.
// source: cron_response.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// 定时任务注册(响应)
type RegisterResp struct {
	Errcode int32  `protobuf:"varint,1,opt,name=errcode" json:"errcode" xml:"errcode,omitempty"`
	Errmsg  string `protobuf:"bytes,2,opt,name=errmsg" json:"errmsg" xml:"errmsg,omitempty"`
	Data    bool   `protobuf:"varint,3,opt,name=data" json:"data" xml:"data,omitempty"`
}

func (m *RegisterResp) Reset()                    { *m = RegisterResp{} }
func (m *RegisterResp) String() string            { return proto.CompactTextString(m) }
func (*RegisterResp) ProtoMessage()               {}
func (*RegisterResp) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *RegisterResp) GetErrcode() int32 {
	if m != nil {
		return m.Errcode
	}
	return 0
}

func (m *RegisterResp) GetErrmsg() string {
	if m != nil {
		return m.Errmsg
	}
	return ""
}

func (m *RegisterResp) GetData() bool {
	if m != nil {
		return m.Data
	}
	return false
}

// 删除指定定时任务(响应)
type DelTaskResp struct {
	Errcode int32  `protobuf:"varint,1,opt,name=errcode" json:"errcode" xml:"errcode,omitempty"`
	Errmsg  string `protobuf:"bytes,2,opt,name=errmsg" json:"errmsg" xml:"errmsg,omitempty"`
	Data    bool   `protobuf:"varint,3,opt,name=data" json:"data" xml:"data,omitempty"`
}

func (m *DelTaskResp) Reset()                    { *m = DelTaskResp{} }
func (m *DelTaskResp) String() string            { return proto.CompactTextString(m) }
func (*DelTaskResp) ProtoMessage()               {}
func (*DelTaskResp) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func (m *DelTaskResp) GetErrcode() int32 {
	if m != nil {
		return m.Errcode
	}
	return 0
}

func (m *DelTaskResp) GetErrmsg() string {
	if m != nil {
		return m.Errmsg
	}
	return ""
}

func (m *DelTaskResp) GetData() bool {
	if m != nil {
		return m.Data
	}
	return false
}

// 定时任务暂停(响应)
type PauseTaskResp struct {
	Errcode int32  `protobuf:"varint,1,opt,name=errcode" json:"errcode" xml:"errcode,omitempty"`
	Errmsg  string `protobuf:"bytes,2,opt,name=errmsg" json:"errmsg" xml:"errmsg,omitempty"`
	Data    bool   `protobuf:"varint,3,opt,name=data" json:"data" xml:"data,omitempty"`
}

func (m *PauseTaskResp) Reset()                    { *m = PauseTaskResp{} }
func (m *PauseTaskResp) String() string            { return proto.CompactTextString(m) }
func (*PauseTaskResp) ProtoMessage()               {}
func (*PauseTaskResp) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

func (m *PauseTaskResp) GetErrcode() int32 {
	if m != nil {
		return m.Errcode
	}
	return 0
}

func (m *PauseTaskResp) GetErrmsg() string {
	if m != nil {
		return m.Errmsg
	}
	return ""
}

func (m *PauseTaskResp) GetData() bool {
	if m != nil {
		return m.Data
	}
	return false
}

// 定时任务恢复(响应)
type RestoreTaskResp struct {
	Errcode int32  `protobuf:"varint,1,opt,name=errcode" json:"errcode" xml:"errcode,omitempty"`
	Errmsg  string `protobuf:"bytes,2,opt,name=errmsg" json:"errmsg" xml:"errmsg,omitempty"`
	Data    bool   `protobuf:"varint,3,opt,name=data" json:"data" xml:"data,omitempty"`
}

func (m *RestoreTaskResp) Reset()                    { *m = RestoreTaskResp{} }
func (m *RestoreTaskResp) String() string            { return proto.CompactTextString(m) }
func (*RestoreTaskResp) ProtoMessage()               {}
func (*RestoreTaskResp) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{3} }

func (m *RestoreTaskResp) GetErrcode() int32 {
	if m != nil {
		return m.Errcode
	}
	return 0
}

func (m *RestoreTaskResp) GetErrmsg() string {
	if m != nil {
		return m.Errmsg
	}
	return ""
}

func (m *RestoreTaskResp) GetData() bool {
	if m != nil {
		return m.Data
	}
	return false
}

// 查询定时任务(响应)
type GetTaskResp struct {
	Errcode int32               `protobuf:"varint,1,opt,name=errcode" json:"errcode" xml:"errcode,omitempty"`
	Errmsg  string              `protobuf:"bytes,2,opt,name=errmsg" json:"errmsg" xml:"errmsg,omitempty"`
	Data    []*GetTaskResp_Data `protobuf:"bytes,3,rep,name=data" json:"data" xml:"data,omitempty"`
}

func (m *GetTaskResp) Reset()                    { *m = GetTaskResp{} }
func (m *GetTaskResp) String() string            { return proto.CompactTextString(m) }
func (*GetTaskResp) ProtoMessage()               {}
func (*GetTaskResp) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{4} }

func (m *GetTaskResp) GetErrcode() int32 {
	if m != nil {
		return m.Errcode
	}
	return 0
}

func (m *GetTaskResp) GetErrmsg() string {
	if m != nil {
		return m.Errmsg
	}
	return ""
}

func (m *GetTaskResp) GetData() []*GetTaskResp_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

type GetTaskResp_Data struct {
	Id            int64  `protobuf:"varint,1,opt,name=id" json:"id" xml:"id,omitempty"`
	TaskName      string `protobuf:"bytes,2,opt,name=task_name,json=taskName" json:"task_name" xml:"task_name,omitempty"`
	TimeFormat    string `protobuf:"bytes,3,opt,name=time_format,json=timeFormat" json:"time_format" xml:"time_format,omitempty"`
	ServiceUrl    string `protobuf:"bytes,4,opt,name=service_url,json=serviceUrl" json:"service_url" xml:"service_url,omitempty"`
	ServiceMethod string `protobuf:"bytes,5,opt,name=service_method,json=serviceMethod" json:"service_method" xml:"service_method,omitempty"`
	ServiceHeader string `protobuf:"bytes,6,opt,name=service_header,json=serviceHeader" json:"service_header" xml:"service_header,omitempty"`
	ServiceBody   string `protobuf:"bytes,7,opt,name=service_body,json=serviceBody" json:"service_body" xml:"service_body,omitempty"`
	Status        int32  `protobuf:"varint,8,opt,name=status" json:"status" xml:"status,omitempty"`
	TaskDesc      string `protobuf:"bytes,9,opt,name=task_desc,json=taskDesc" json:"task_desc" xml:"task_desc,omitempty"`
	CreateTime    string `protobuf:"bytes,10,opt,name=create_time,json=createTime" json:"create_time" xml:"create_time,omitempty"`
	UpdateTime    string `protobuf:"bytes,11,opt,name=update_time,json=updateTime" json:"update_time" xml:"update_time,omitempty"`
}

func (m *GetTaskResp_Data) Reset()                    { *m = GetTaskResp_Data{} }
func (m *GetTaskResp_Data) String() string            { return proto.CompactTextString(m) }
func (*GetTaskResp_Data) ProtoMessage()               {}
func (*GetTaskResp_Data) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{4, 0} }

func (m *GetTaskResp_Data) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *GetTaskResp_Data) GetTaskName() string {
	if m != nil {
		return m.TaskName
	}
	return ""
}

func (m *GetTaskResp_Data) GetTimeFormat() string {
	if m != nil {
		return m.TimeFormat
	}
	return ""
}

func (m *GetTaskResp_Data) GetServiceUrl() string {
	if m != nil {
		return m.ServiceUrl
	}
	return ""
}

func (m *GetTaskResp_Data) GetServiceMethod() string {
	if m != nil {
		return m.ServiceMethod
	}
	return ""
}

func (m *GetTaskResp_Data) GetServiceHeader() string {
	if m != nil {
		return m.ServiceHeader
	}
	return ""
}

func (m *GetTaskResp_Data) GetServiceBody() string {
	if m != nil {
		return m.ServiceBody
	}
	return ""
}

func (m *GetTaskResp_Data) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *GetTaskResp_Data) GetTaskDesc() string {
	if m != nil {
		return m.TaskDesc
	}
	return ""
}

func (m *GetTaskResp_Data) GetCreateTime() string {
	if m != nil {
		return m.CreateTime
	}
	return ""
}

func (m *GetTaskResp_Data) GetUpdateTime() string {
	if m != nil {
		return m.UpdateTime
	}
	return ""
}

// 修改定时任务(响应)
type MotifyTaskResp struct {
	Errcode int32  `protobuf:"varint,1,opt,name=errcode" json:"errcode" xml:"errcode,omitempty"`
	Errmsg  string `protobuf:"bytes,2,opt,name=errmsg" json:"errmsg" xml:"errmsg,omitempty"`
	Data    bool   `protobuf:"varint,3,opt,name=data" json:"data" xml:"data,omitempty"`
}

func (m *MotifyTaskResp) Reset()                    { *m = MotifyTaskResp{} }
func (m *MotifyTaskResp) String() string            { return proto.CompactTextString(m) }
func (*MotifyTaskResp) ProtoMessage()               {}
func (*MotifyTaskResp) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{5} }

func (m *MotifyTaskResp) GetErrcode() int32 {
	if m != nil {
		return m.Errcode
	}
	return 0
}

func (m *MotifyTaskResp) GetErrmsg() string {
	if m != nil {
		return m.Errmsg
	}
	return ""
}

func (m *MotifyTaskResp) GetData() bool {
	if m != nil {
		return m.Data
	}
	return false
}

func init() {
	proto.RegisterType((*RegisterResp)(nil), "pb.RegisterResp")
	proto.RegisterType((*DelTaskResp)(nil), "pb.DelTaskResp")
	proto.RegisterType((*PauseTaskResp)(nil), "pb.PauseTaskResp")
	proto.RegisterType((*RestoreTaskResp)(nil), "pb.RestoreTaskResp")
	proto.RegisterType((*GetTaskResp)(nil), "pb.GetTaskResp")
	proto.RegisterType((*GetTaskResp_Data)(nil), "pb.GetTaskResp.Data")
	proto.RegisterType((*MotifyTaskResp)(nil), "pb.MotifyTaskResp")
}

func init() { proto.RegisterFile("cron_response.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 377 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x93, 0xcf, 0x8a, 0xdb, 0x30,
	0x10, 0xc6, 0xb1, 0x9d, 0x7f, 0x1e, 0x27, 0x29, 0xa8, 0xa5, 0x88, 0xf6, 0xd0, 0x34, 0x50, 0xf0,
	0xc9, 0x87, 0xf6, 0x0d, 0x4a, 0x68, 0x7b, 0x49, 0x29, 0x6a, 0xb2, 0x7b, 0x34, 0xb2, 0x35, 0x49,
	0x4c, 0xe2, 0xc8, 0x48, 0xf2, 0x42, 0x1e, 0x71, 0x1f, 0x62, 0xdf, 0x65, 0x91, 0x6c, 0x67, 0xb3,
	0xe7, 0xf5, 0xcd, 0xf3, 0xe3, 0xc7, 0xe7, 0xf9, 0x06, 0x1b, 0xde, 0xe7, 0x4a, 0x9e, 0x53, 0x85,
	0xba, 0x92, 0x67, 0x8d, 0x49, 0xa5, 0xa4, 0x91, 0xc4, 0xaf, 0xb2, 0xe5, 0x06, 0xa6, 0x0c, 0xf7,
	0x85, 0x36, 0xa8, 0x18, 0xea, 0x8a, 0x50, 0x18, 0xa3, 0x52, 0xb9, 0x14, 0x48, 0xbd, 0x85, 0x17,
	0x0f, 0x59, 0x37, 0x92, 0x8f, 0x30, 0x42, 0xa5, 0x4a, 0xbd, 0xa7, 0xfe, 0xc2, 0x8b, 0x43, 0xd6,
	0x4e, 0x84, 0xc0, 0x40, 0x70, 0xc3, 0x69, 0xb0, 0xf0, 0xe2, 0x09, 0x73, 0xcf, 0xcb, 0xff, 0x10,
	0xad, 0xf0, 0xb4, 0xe1, 0xfa, 0xd8, 0x63, 0xe8, 0x16, 0x66, 0xff, 0x78, 0xad, 0xb1, 0xe7, 0xd8,
	0x7b, 0x78, 0xc7, 0x50, 0x1b, 0xa9, 0xfa, 0x0e, 0x7e, 0x0c, 0x20, 0xfa, 0x8d, 0xe6, 0x0d, 0xa9,
	0xf1, 0x35, 0x35, 0x88, 0xa3, 0xef, 0x1f, 0x92, 0x2a, 0x4b, 0x6e, 0x02, 0x93, 0x15, 0x37, 0xbc,
	0x79, 0xd7, 0xa7, 0x27, 0x1f, 0x06, 0x76, 0x24, 0x73, 0xf0, 0x0b, 0xe1, 0xf2, 0x03, 0xe6, 0x17,
	0x82, 0x7c, 0x86, 0xd0, 0x70, 0x7d, 0x4c, 0xcf, 0xbc, 0xc4, 0x36, 0x7d, 0x62, 0xc1, 0x5f, 0x5e,
	0x22, 0xf9, 0x02, 0x91, 0x29, 0x4a, 0x4c, 0x77, 0x52, 0x95, 0xdc, 0xb8, 0xe5, 0x43, 0x06, 0x16,
	0xfd, 0x72, 0xc4, 0x0a, 0x1a, 0xd5, 0x43, 0x91, 0x63, 0x5a, 0xab, 0x13, 0x1d, 0x34, 0x42, 0x8b,
	0xb6, 0xea, 0x44, 0xbe, 0xc1, 0xbc, 0x13, 0x4a, 0x34, 0x07, 0x29, 0xe8, 0xd0, 0x39, 0xb3, 0x96,
	0xae, 0x1d, 0xbc, 0xd5, 0x0e, 0xc8, 0x05, 0x2a, 0x3a, 0x7a, 0xa5, 0xfd, 0x71, 0x90, 0x7c, 0x85,
	0x69, 0xa7, 0x65, 0x52, 0x5c, 0xe8, 0xd8, 0x49, 0xdd, 0x0a, 0x3f, 0xa5, 0xb8, 0xd8, 0x53, 0x69,
	0xc3, 0x4d, 0xad, 0xe9, 0xc4, 0xdd, 0xb0, 0x9d, 0xae, 0x3d, 0x05, 0xea, 0x9c, 0x86, 0x2f, 0x3d,
	0x57, 0xa8, 0x73, 0x5b, 0x23, 0x57, 0xc8, 0x0d, 0xa6, 0xb6, 0x1b, 0x85, 0xa6, 0x46, 0x83, 0x36,
	0x45, 0x73, 0x88, 0xba, 0x12, 0x57, 0x21, 0x6a, 0x84, 0x06, 0x59, 0x61, 0x79, 0x07, 0xf3, 0xb5,
	0x34, 0xc5, 0xee, 0xd2, 0xef, 0x37, 0x92, 0x8d, 0xdc, 0x9f, 0xf8, 0xe3, 0x39, 0x00, 0x00, 0xff,
	0xff, 0x95, 0x75, 0x9a, 0x19, 0xa0, 0x03, 0x00, 0x00,
}
