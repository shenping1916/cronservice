// Code generated by ICEBERG protoc-gen-go. DO NOT EDIT EXCEPET SERVER VERSION.
// source: cron_request.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// 定时任务注册(请求)
type RegisterReq struct {
	TaskName      string `protobuf:"bytes,1,opt,name=task_name,json=taskName" json:"task_name" xml:"task_name,omitempty"`
	TimeFormat    string `protobuf:"bytes,2,opt,name=time_format,json=timeFormat" json:"time_format" xml:"time_format,omitempty"`
	ServiceUrl    string `protobuf:"bytes,3,opt,name=service_url,json=serviceUrl" json:"service_url" xml:"service_url,omitempty"`
	ServiceMethod string `protobuf:"bytes,4,opt,name=service_method,json=serviceMethod" json:"service_method" xml:"service_method,omitempty"`
	Method        string `protobuf:"bytes,5,opt,name=method" json:"method" xml:"method,omitempty"`
	ServiceHeader string `protobuf:"bytes,6,opt,name=service_header,json=serviceHeader" json:"service_header" xml:"service_header,omitempty"`
	Form          string `protobuf:"bytes,7,opt,name=form" json:"form" xml:"form,omitempty"`
	ServiceBody   string `protobuf:"bytes,8,opt,name=service_body,json=serviceBody" json:"service_body" xml:"service_body,omitempty"`
	TaskDesc      string `protobuf:"bytes,9,opt,name=task_desc,json=taskDesc" json:"task_desc" xml:"task_desc,omitempty"`
}

func (m *RegisterReq) Reset()                    { *m = RegisterReq{} }
func (m *RegisterReq) String() string            { return proto.CompactTextString(m) }
func (*RegisterReq) ProtoMessage()               {}
func (*RegisterReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *RegisterReq) GetTaskName() string {
	if m != nil {
		return m.TaskName
	}
	return ""
}

func (m *RegisterReq) GetTimeFormat() string {
	if m != nil {
		return m.TimeFormat
	}
	return ""
}

func (m *RegisterReq) GetServiceUrl() string {
	if m != nil {
		return m.ServiceUrl
	}
	return ""
}

func (m *RegisterReq) GetServiceMethod() string {
	if m != nil {
		return m.ServiceMethod
	}
	return ""
}

func (m *RegisterReq) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

func (m *RegisterReq) GetServiceHeader() string {
	if m != nil {
		return m.ServiceHeader
	}
	return ""
}

func (m *RegisterReq) GetForm() string {
	if m != nil {
		return m.Form
	}
	return ""
}

func (m *RegisterReq) GetServiceBody() string {
	if m != nil {
		return m.ServiceBody
	}
	return ""
}

func (m *RegisterReq) GetTaskDesc() string {
	if m != nil {
		return m.TaskDesc
	}
	return ""
}

// 删除指定定时任务(请求)
type DelTaskReq struct {
	TaskName string `protobuf:"bytes,1,opt,name=task_name,json=taskName" json:"task_name" xml:"task_name,omitempty"`
}

func (m *DelTaskReq) Reset()                    { *m = DelTaskReq{} }
func (m *DelTaskReq) String() string            { return proto.CompactTextString(m) }
func (*DelTaskReq) ProtoMessage()               {}
func (*DelTaskReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *DelTaskReq) GetTaskName() string {
	if m != nil {
		return m.TaskName
	}
	return ""
}

// 定时任务暂停(请求)
type PauseTaskReq struct {
	TaskName string `protobuf:"bytes,1,opt,name=task_name,json=taskName" json:"task_name" xml:"task_name,omitempty"`
}

func (m *PauseTaskReq) Reset()                    { *m = PauseTaskReq{} }
func (m *PauseTaskReq) String() string            { return proto.CompactTextString(m) }
func (*PauseTaskReq) ProtoMessage()               {}
func (*PauseTaskReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *PauseTaskReq) GetTaskName() string {
	if m != nil {
		return m.TaskName
	}
	return ""
}

// 定时任务恢复(请求)
type RestoreTaskReq struct {
	TaskName string `protobuf:"bytes,1,opt,name=task_name,json=taskName" json:"task_name" xml:"task_name,omitempty"`
}

func (m *RestoreTaskReq) Reset()                    { *m = RestoreTaskReq{} }
func (m *RestoreTaskReq) String() string            { return proto.CompactTextString(m) }
func (*RestoreTaskReq) ProtoMessage()               {}
func (*RestoreTaskReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *RestoreTaskReq) GetTaskName() string {
	if m != nil {
		return m.TaskName
	}
	return ""
}

// 查询定时任务(请求)
type GetTaskReq struct {
	TaskName string `protobuf:"bytes,1,opt,name=task_name,json=taskName" json:"task_name" xml:"task_name,omitempty"`
}

func (m *GetTaskReq) Reset()                    { *m = GetTaskReq{} }
func (m *GetTaskReq) String() string            { return proto.CompactTextString(m) }
func (*GetTaskReq) ProtoMessage()               {}
func (*GetTaskReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *GetTaskReq) GetTaskName() string {
	if m != nil {
		return m.TaskName
	}
	return ""
}

// 修改定时任务(请求)
type MotifyTaskReq struct {
	TaskName      string `protobuf:"bytes,1,opt,name=task_name,json=taskName" json:"task_name" xml:"task_name,omitempty"`
	TimeFormat    string `protobuf:"bytes,2,opt,name=time_format,json=timeFormat" json:"time_format" xml:"time_format,omitempty"`
	ServiceUrl    string `protobuf:"bytes,3,opt,name=service_url,json=serviceUrl" json:"service_url" xml:"service_url,omitempty"`
	ServiceMethod string `protobuf:"bytes,4,opt,name=service_method,json=serviceMethod" json:"service_method" xml:"service_method,omitempty"`
	Method        string `protobuf:"bytes,5,opt,name=method" json:"method" xml:"method,omitempty"`
	ServiceHeader string `protobuf:"bytes,6,opt,name=service_header,json=serviceHeader" json:"service_header" xml:"service_header,omitempty"`
	Form          string `protobuf:"bytes,7,opt,name=form" json:"form" xml:"form,omitempty"`
	ServiceBody   string `protobuf:"bytes,8,opt,name=service_body,json=serviceBody" json:"service_body" xml:"service_body,omitempty"`
	TaskDesc      string `protobuf:"bytes,9,opt,name=task_desc,json=taskDesc" json:"task_desc" xml:"task_desc,omitempty"`
}

func (m *MotifyTaskReq) Reset()                    { *m = MotifyTaskReq{} }
func (m *MotifyTaskReq) String() string            { return proto.CompactTextString(m) }
func (*MotifyTaskReq) ProtoMessage()               {}
func (*MotifyTaskReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

func (m *MotifyTaskReq) GetTaskName() string {
	if m != nil {
		return m.TaskName
	}
	return ""
}

func (m *MotifyTaskReq) GetTimeFormat() string {
	if m != nil {
		return m.TimeFormat
	}
	return ""
}

func (m *MotifyTaskReq) GetServiceUrl() string {
	if m != nil {
		return m.ServiceUrl
	}
	return ""
}

func (m *MotifyTaskReq) GetServiceMethod() string {
	if m != nil {
		return m.ServiceMethod
	}
	return ""
}

func (m *MotifyTaskReq) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

func (m *MotifyTaskReq) GetServiceHeader() string {
	if m != nil {
		return m.ServiceHeader
	}
	return ""
}

func (m *MotifyTaskReq) GetForm() string {
	if m != nil {
		return m.Form
	}
	return ""
}

func (m *MotifyTaskReq) GetServiceBody() string {
	if m != nil {
		return m.ServiceBody
	}
	return ""
}

func (m *MotifyTaskReq) GetTaskDesc() string {
	if m != nil {
		return m.TaskDesc
	}
	return ""
}

func init() {
	proto.RegisterType((*RegisterReq)(nil), "pb.RegisterReq")
	proto.RegisterType((*DelTaskReq)(nil), "pb.DelTaskReq")
	proto.RegisterType((*PauseTaskReq)(nil), "pb.PauseTaskReq")
	proto.RegisterType((*RestoreTaskReq)(nil), "pb.RestoreTaskReq")
	proto.RegisterType((*GetTaskReq)(nil), "pb.GetTaskReq")
	proto.RegisterType((*MotifyTaskReq)(nil), "pb.MotifyTaskReq")
}

func init() { proto.RegisterFile("cron_request.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 284 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe4, 0x93, 0x4d, 0x4b, 0xc3, 0x40,
	0x10, 0x86, 0x69, 0xac, 0xb5, 0x99, 0x7e, 0x1c, 0xf6, 0x20, 0x0b, 0x1e, 0xd4, 0x80, 0x60, 0x11,
	0xbd, 0xf8, 0x0f, 0xa4, 0xa8, 0x97, 0x8a, 0x04, 0x3d, 0x87, 0x4d, 0x32, 0xb5, 0xa1, 0x49, 0xb7,
	0x9d, 0x9d, 0x08, 0xf9, 0x43, 0xe2, 0xcf, 0x94, 0x8c, 0x89, 0x1f, 0x27, 0x73, 0xf7, 0x96, 0x3c,
	0xef, 0xf3, 0xc2, 0xcc, 0x2e, 0x0b, 0x2a, 0x21, 0xbb, 0x89, 0x08, 0x77, 0x25, 0x3a, 0xbe, 0xda,
	0x92, 0x65, 0xab, 0xbc, 0x6d, 0x1c, 0xbc, 0x79, 0x30, 0x0a, 0xf1, 0x25, 0x73, 0x8c, 0x14, 0xe2,
	0x4e, 0x1d, 0x81, 0xcf, 0xc6, 0xad, 0xa3, 0x8d, 0x29, 0x50, 0xf7, 0x4e, 0x7a, 0xe7, 0x7e, 0x38,
	0xac, 0xc1, 0x83, 0x29, 0x50, 0x1d, 0xc3, 0x88, 0xb3, 0x02, 0xa3, 0xa5, 0xa5, 0xc2, 0xb0, 0xf6,
	0x24, 0x86, 0x1a, 0xdd, 0x0a, 0xa9, 0x05, 0x87, 0xf4, 0x9a, 0x25, 0x18, 0x95, 0x94, 0xeb, 0xbd,
	0x4f, 0xa1, 0x41, 0xcf, 0x94, 0xab, 0x33, 0x98, 0xb6, 0x42, 0x81, 0xbc, 0xb2, 0xa9, 0xee, 0x8b,
	0x33, 0x69, 0xe8, 0x42, 0xa0, 0x3a, 0x84, 0x41, 0x13, 0xef, 0x4b, 0xdc, 0xfc, 0xfd, 0xac, 0xaf,
	0xd0, 0xa4, 0x48, 0x7a, 0xf0, 0xab, 0x7e, 0x2f, 0x50, 0x29, 0xe8, 0xd7, 0x23, 0xea, 0x03, 0x09,
	0xe5, 0x5b, 0x9d, 0xc2, 0xb8, 0xad, 0xc6, 0x36, 0xad, 0xf4, 0x50, 0xb2, 0x76, 0xdc, 0x1b, 0x9b,
	0x56, 0x5f, 0xbb, 0xa7, 0xe8, 0x12, 0xed, 0x7f, 0xef, 0x3e, 0x47, 0x97, 0x04, 0x33, 0x80, 0x39,
	0xe6, 0x4f, 0xc6, 0xad, 0xff, 0x3a, 0xa6, 0xe0, 0x02, 0xc6, 0x8f, 0xa6, 0x74, 0xd8, 0x49, 0xbe,
	0x84, 0x69, 0x88, 0x8e, 0x2d, 0x75, 0xd3, 0x67, 0x00, 0x77, 0xc8, 0x9d, 0xd4, 0x77, 0x0f, 0x26,
	0x0b, 0xcb, 0xd9, 0xb2, 0xea, 0xa2, 0xff, 0xe7, 0xcb, 0x8d, 0x07, 0xf2, 0x20, 0xae, 0x3f, 0x02,
	0x00, 0x00, 0xff, 0xff, 0xaa, 0xcd, 0x62, 0xd2, 0x26, 0x03, 0x00, 0x00,
}
